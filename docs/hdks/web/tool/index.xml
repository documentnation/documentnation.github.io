<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tool on D0CUM3NTN4T10N</title>
    <link>https://documentnation.github.io/docs/hdks/web/tool/</link>
    <description>Recent content in Tool on D0CUM3NTN4T10N</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 17 Jan 2024 11:58:47 +0530</lastBuildDate>
    <atom:link href="https://documentnation.github.io/docs/hdks/web/tool/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Burp Suite Troubleshooting</title>
      <link>https://documentnation.github.io/docs/hdks/web/tool/burp-suite-troubleshooting/</link>
      <pubDate>Tue, 28 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/web/tool/burp-suite-troubleshooting/</guid>
      <description>Fix Error “Failed to connect to x.x.x.x:443” linkIf we try to HTTP access rather than HTTPS, This error occurs because the Burp’s embedded browser uses secure connections automatically by default.&#xA;If we got the error, we may be able to solve the problem by the following methods:&#xA;In the embedded browser, open Settings by clicking on three dots menu icon. Once Settings screen opens, go to “Privacy and security” → “Security”.</description>
    </item>
    <item>
      <title>Add Custom HTTP Headers in Burp Suite</title>
      <link>https://documentnation.github.io/docs/hdks/web/tool/add-custom-http-headers-in-burp-suite/</link>
      <pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/web/tool/add-custom-http-headers-in-burp-suite/</guid>
      <description>Add Custom HTTP Headers linkIn some cases such as bug bounty programs, it may be convenient to set custom HTTP headers in advance.&#xA;Go to Proxy -&amp;gt; Options tab.&#xA;Scroll down to &amp;ldquo;Match and Replace&amp;rdquo;.&#xA;Click on &amp;ldquo;Add&amp;rdquo;.&#xA;Set rule:&#xA;User Agent&#xA;Type: Request header Match: ^User-Agent.*$ Replace: User-Agent: HackerOne-username Comment: New Original Header&#xA;Type: Request header Match: (empty) Replace: X-Bug-Bounty: HackerOne-username Comment: Check the box of &amp;ldquo;Regex match&amp;rdquo;.&#xA;Click on &amp;ldquo;OK&amp;rdquo;.</description>
    </item>
    <item>
      <title>Automate Sequence Requests with Burp Intruder</title>
      <link>https://documentnation.github.io/docs/hdks/web/tool/automate-sequence-requests-with-burp-intruder/</link>
      <pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/web/tool/automate-sequence-requests-with-burp-intruder/</guid>
      <description>Automation link &amp;ldquo;Project options&amp;rdquo; -&amp;gt; &amp;ldquo;Sessions&amp;rdquo; -&amp;gt; &amp;ldquo;Session handling rules&amp;rdquo; panel -&amp;gt; Click &amp;ldquo;Add&amp;rdquo;. The &amp;ldquo;Session handling rules editor&amp;rdquo; opens. &amp;ldquo;Scope&amp;rdquo; tab -&amp;gt; Select &amp;ldquo;Include all URLs&amp;rdquo;. &amp;ldquo;Details&amp;rdquo; tab -&amp;gt; Under &amp;ldquo;Rule actions&amp;rdquo; -&amp;gt; Click &amp;ldquo;Add&amp;rdquo; -&amp;gt; &amp;ldquo;Run a macro&amp;rdquo; -&amp;gt; Under &amp;ldquo;Select macro&amp;rdquo; -&amp;gt; Click &amp;ldquo;Add&amp;rdquo;. The &amp;ldquo;Macro Recorder&amp;rdquo; opens. Select the sequence of requests as follows: POST /message/submit GET /message POST /account Click &amp;ldquo;OK&amp;rdquo;. Manage Parameters link In the list of requests, select the requests in which specific value used POST parameter changes.</description>
    </item>
    <item>
      <title>Integrate Burp Request and SQLmap</title>
      <link>https://documentnation.github.io/docs/hdks/web/tool/integrate-burp-request-and-sqlmap/</link>
      <pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/web/tool/integrate-burp-request-and-sqlmap/</guid>
      <description>Download Request File in Burp Suite link Right click on the request field in Burp Suite. Click &amp;ldquo;Save item&amp;rdquo; or &amp;ldquo;Copy to file&amp;rdquo; to download the request state. Save as &amp;ldquo;request.txt&amp;rdquo; (this is arbitrary name). Using Request File in SQLmap linkAfter downloading the request file in Burp Suite as the previous section, we can use when running SQLmap.&#xA;sqlmap -r request.txt By the way, we can see what SQLmap send payloads to websites by adding the --proxy flag.</description>
    </item>
    <item>
      <title>SOCKS Proxy in Burp Suite</title>
      <link>https://documentnation.github.io/docs/hdks/web/tool/socks-proxy-in-burp-suite/</link>
      <pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/web/tool/socks-proxy-in-burp-suite/</guid>
      <description>Setup SOCKS Proxy link In Burp Suite, go to Proxy → Proxy settings.&#xA;In the settings window, select User tab and go to Netwotk → Connections in left pane.&#xA;In the SOCKS proxy section, enable &amp;ldquo;Override options for this project only&amp;rdquo;.&#xA;Fill proxy host and port as follow:&#xA;SOCKS proxy host: 127.0.0.1 SOCKS proxy port: 9251 Check &amp;ldquo;Use SOCKS proxy&amp;rdquo; and close the window.</description>
    </item>
    <item>
      <title>Turbo Intruder in Burp Suite</title>
      <link>https://documentnation.github.io/docs/hdks/web/tool/turbo-intruder-in-burp-suite/</link>
      <pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/web/tool/turbo-intruder-in-burp-suite/</guid>
      <description>Using Single Parameter linkSet “%s” to the parameter for brute force.&#xA;For example, set %s as the value of password then we can brute force to password.&#xA;POST /login HTTP/1.1 ... username=admin&amp;amp;password=%s Here is the Python cheat sheet. We can use either code depending on the situation.&#xA;def queueRequests(target, wordlists): engine = RequestEngine(endpoint=target.endpoint, concurrentConnections=5, requestsPerConnection=5, pipeline=False ) # Brute force (wordlist) for word in open(&amp;#39;/usr/share/wordlists/rockyou.txt&amp;#39;): engine.queue(target.req, word.rstrip()) # Brute force (0 - 255) for i in range(0, 255): engine.</description>
    </item>
    <item>
      <title>How to Use OWASP ZAP</title>
      <link>https://documentnation.github.io/docs/hdks/web/tool/how-to-use-owasp-zap/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/web/tool/how-to-use-owasp-zap/</guid>
      <description>Automated Scan link Ajax Spider&#xA;If you want to use the ajax spider with HtmlUnit (the easiest way), you may need to install the HtmlUnit.&#xA;sudo apt install libjenkins-htmlunit-core-js-java Intercept Request link Right-click on the URL. Select “Break…” The “Add Breakpoint” window will appear. Manual Request linkOWASP ZAP can resend a request in which you can manually edit the header like the Burp Suite’s Repeater.&#xA;Right-click on the URL. Select “Open/Resend with Request Editor…”.</description>
    </item>
  </channel>
</rss>
