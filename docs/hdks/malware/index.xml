<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Malware on D0CUM3NTN4T10N</title>
    <link>https://documentnation.github.io/docs/hdks/malware/</link>
    <description>Recent content in Malware on D0CUM3NTN4T10N</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 17 Jan 2024 15:28:13 +0530</lastBuildDate>
    <atom:link href="https://documentnation.github.io/docs/hdks/malware/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LibreOffice Macros</title>
      <link>https://documentnation.github.io/docs/hdks/malware/libreoffice-macros/</link>
      <pubDate>Sat, 09 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/malware/libreoffice-macros/</guid>
      <description>Create Macro to Code Execution linkReference: https://jamesonhacking.blogspot.com/2022/03/using-malicious-libreoffice-calc-macros.html&#xA;1. Create Macro linkWe can create a macro and embed it into a LibreOffice file, like Microsoft Excel.&#xA;Open one of the LibreOffice applications such as Calc, Writer.&#xA;Save a new empty file at first.&#xA;Go to Tools → Macros → Organize Macros → Basic. The BASIC Macros window opens.&#xA;In the window, select our new created filename in the left pane, then click New.</description>
    </item>
    <item>
      <title>Maldoc Analysis</title>
      <link>https://documentnation.github.io/docs/hdks/malware/maldoc-analysis/</link>
      <pubDate>Sun, 06 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/malware/maldoc-analysis/</guid>
      <description>Static Analysis linkExtract Files in Doc link unzip example.doc Find Interesting Information link strings example.doc exiftool example.doc binwalk -e example.doc Additionally, we can use CyberChef. Follow this steps:&#xA;Open CyberChef Upload the suspicious doc file on CyberChef. Use the &amp;ldquo;Strings&amp;rdquo; function to extract strings. If you found obfuscated strings in the results, add the &amp;ldquo;Find / Replace&amp;rdquo; function to remove extra strings. If necessary, add the &amp;ldquo;Drop bytes&amp;rdquo; function to remove extra bytes.</description>
    </item>
    <item>
      <title>Malware Detection on Windows</title>
      <link>https://documentnation.github.io/docs/hdks/malware/malware-detection-on-windows/</link>
      <pubDate>Sun, 06 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/malware/malware-detection-on-windows/</guid>
      <description>Checking Established Network linkThis process refers to this article. Please see it for more details.&#xA;1. List Network Processes linkWhat first we need to check is to see the network status on Command Prompt.&#xA;# -a: Show all connections # -n: Show ip addresses and ports as number # -o: Show process ID netstat -ano Especially, &amp;ldquo;ESTABLISHED&amp;rdquo; status might be suspicious to be connected attackers server. So we need to investigate the IP address which is connected with our machine.</description>
    </item>
    <item>
      <title>Splunk Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/malware/splunk-pentesting/</link>
      <pubDate>Thu, 03 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/malware/splunk-pentesting/</guid>
      <description>Default Credentials link admin:changeme SPL (Search Processing Language) linkIn Splunk, click Search &amp;amp; Reporting. Maybe we need to set the “All time” Preset on the right of the search form.&#xA;The cheat sheet of searching is below:&#xA;# &amp;#34;main&amp;#34; index stores all the processed data index=&amp;#34;main&amp;#34; earliest=0 Files link index=main example.aspx sourcetype=&amp;#34;&amp;lt;SourceType&amp;gt;&amp;#34; EventCode link # EventCode 8: CreateRemoteThread in sysmon. index=&amp;#34;main&amp;#34; sourcetype=&amp;#34;&amp;lt;SourceType&amp;gt;&amp;#34; EventCode=8 # EventCode 11: FileCreate in sysmon. index=&amp;#34;main&amp;#34; sourcetype=&amp;#34;&amp;lt;SourceType&amp;gt;&amp;#34; EventCode=11 IP Addresses link index=main SourceIp=172.</description>
    </item>
    <item>
      <title>AV (Antivirus) Evasion</title>
      <link>https://documentnation.github.io/docs/hdks/malware/antivirus-evasion/</link>
      <pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/malware/antivirus-evasion/</guid>
      <description>Online Scanner linkWe can check if our payload is detected by antivirus.&#xA;AntiScan </description>
    </item>
    <item>
      <title>Malware Dynamic Analysis with REMnux</title>
      <link>https://documentnation.github.io/docs/hdks/malware/malware-dynamic-analysis-with-remnux/</link>
      <pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/malware/malware-dynamic-analysis-with-remnux/</guid>
      <description>Upgrade REMnux linkBefore starting analysis, upgrade the REMnux machine by running the following command.&#xA;remnux upgrade Add Execute Permission linkTo analyze an executable, modify the permission to execute the file then run it.&#xA;chmod &amp;#43;x example.exe ./example.exe Sniff C2 Server Packets linkIf the executable starts C2 server when dynamic analysis, we might be able to sniff packets using Wireshark. In Wireshark, filter by http for sniffing HTTP packets.&#xA;Using Process Monitor (Windows) linkIf our environment is Windows, start Process Monitor before dynamic analysis.</description>
    </item>
    <item>
      <title>NPM Supply Chain Attack</title>
      <link>https://documentnation.github.io/docs/hdks/malware/npm-supply-chain-attack/</link>
      <pubDate>Wed, 12 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/malware/npm-supply-chain-attack/</guid>
      <description>This page has lack of content yet.&#xA;Dependency Confusion linkThe PoC is available thanks to the researcher who discovered the threat.&#xA;Lock File Injection linkAttackers may insert their malicious npm package into yarn.lock or package-lock.json in the target project.</description>
    </item>
    <item>
      <title>Malware Static Analysis</title>
      <link>https://documentnation.github.io/docs/hdks/malware/malware-static-analysis/</link>
      <pubDate>Wed, 17 May 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/malware/malware-static-analysis/</guid>
      <description>file example.exe file-magic.py example.exe binwalk -e example.exe strings example.exe objdump example.exe # Identify the file type using signature. trid example.exe # Determine types of files and examine file properties. # -i: Show file info diec -i example.exe # -r: Recursive scan # -d: Deep scan diec -rd example.exe # -e: Show entropy diec -e example.exe # -a: Scan all types diec -a example.exe # Read EXIF metadata exiftool example.exe # Extract interesting strings bulk_extractor example.</description>
    </item>
    <item>
      <title>Malware Analysis</title>
      <link>https://documentnation.github.io/docs/hdks/malware/malware-analysis/</link>
      <pubDate>Tue, 04 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/malware/malware-analysis/</guid>
      <description>Build a Sandbox linkBefore analyzing malware, it’s recommended to build a sandbox for malware analysis.&#xA;Below are useful tools for building such an environment.&#xA;FLARE VM&#xA;It is a collection of software installations scripts for Windows systems to maintain a reverse engineering environment on a virtual machine.&#xA;REMnux&#xA;A Linux toolkit for malware analysis.&#xA;ANY.RUN&#xA;An interactive online malware sandbox.&#xA;Hybrid Analysis&#xA;A free online malware analysis.&#xA;Get Information About Malware linkFirst off, we get the hash of the malware.</description>
    </item>
    <item>
      <title>Sigma Rules</title>
      <link>https://documentnation.github.io/docs/hdks/malware/sigma-rules/</link>
      <pubDate>Sat, 14 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/malware/sigma-rules/</guid>
      <description>Example link&amp;ldquo;example.yml&amp;rdquo;&#xA;title: Example Threats id: 0506a799-698b-43b4-85a1-ac4c84c720e9 status: experimental description: This is an example rule. author: John date: 2023/01/14 modified: references: - https://example.com/example-threats logsource: product: windows service: sysmon detection: selection: EventID: 1 ParentImage|endswith: - &amp;#39;chrome.exe&amp;#39; Image|endswith: - &amp;#39;mshta.exe&amp;#39; CommandLine|contains: - &amp;#39;\mshta.exe&amp;#39; - &amp;#39;-f&amp;#39; - &amp;#39; -e &amp;#39; Hashes: - &amp;#39;31B87C94B9AFB492B845CEA2360A4B35&amp;#39; selection2: EventID: 2 condition: selection OR selection2 fields: falsepositives: - Unknown level: medium tags: # associated from MITRE ATT&amp;amp;CK - attack.</description>
    </item>
  </channel>
</rss>
